package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FormationInitialeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormationInitialeAllPropertiesEquals(FormationInitiale expected, FormationInitiale actual) {
        assertFormationInitialeAutoGeneratedPropertiesEquals(expected, actual);
        assertFormationInitialeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormationInitialeAllUpdatablePropertiesEquals(FormationInitiale expected, FormationInitiale actual) {
        assertFormationInitialeUpdatableFieldsEquals(expected, actual);
        assertFormationInitialeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormationInitialeAutoGeneratedPropertiesEquals(FormationInitiale expected, FormationInitiale actual) {
        assertThat(expected)
            .as("Verify FormationInitiale auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormationInitialeUpdatableFieldsEquals(FormationInitiale expected, FormationInitiale actual) {
        assertThat(expected)
            .as("Verify FormationInitiale relevant properties")
            .satisfies(e -> assertThat(e.getNomFormationI()).as("check nomFormationI").isEqualTo(actual.getNomFormationI()))
            .satisfies(e -> assertThat(e.getDuree()).as("check duree").isEqualTo(actual.getDuree()))
            .satisfies(e -> assertThat(e.getAdmission()).as("check admission").isEqualTo(actual.getAdmission()))
            .satisfies(e -> assertThat(e.getDiplomeRequis()).as("check diplomeRequis").isEqualTo(actual.getDiplomeRequis()))
            .satisfies(e -> assertThat(e.getNiveauEtude()).as("check niveauEtude").isEqualTo(actual.getNiveauEtude()))
            .satisfies(e -> assertThat(e.getFicheFormation()).as("check ficheFormation").isEqualTo(actual.getFicheFormation()))
            .satisfies(
                e ->
                    assertThat(e.getFicheFormationContentType())
                        .as("check ficheFormation contenty type")
                        .isEqualTo(actual.getFicheFormationContentType())
            )
            .satisfies(e -> assertThat(e.getFiliere()).as("check filiere").isEqualTo(actual.getFiliere()))
            .satisfies(e -> assertThat(e.getSerie()).as("check serie").isEqualTo(actual.getSerie()))
            .satisfies(e -> assertThat(e.getCfp()).as("check cfp").isEqualTo(actual.getCfp()))
            .satisfies(e -> assertThat(e.getLycee()).as("check lycee").isEqualTo(actual.getLycee()))
            .satisfies(e -> assertThat(e.getNomConcours()).as("check nomConcours").isEqualTo(actual.getNomConcours()))
            .satisfies(e -> assertThat(e.getDateOuverture()).as("check dateOuverture").isEqualTo(actual.getDateOuverture()))
            .satisfies(e -> assertThat(e.getDateCloture()).as("check dateCloture").isEqualTo(actual.getDateCloture()))
            .satisfies(e -> assertThat(e.getDateConcours()).as("check dateConcours").isEqualTo(actual.getDateConcours()))
            .satisfies(e -> assertThat(e.getNomDiplome()).as("check nomDiplome").isEqualTo(actual.getNomDiplome()))
            .satisfies(e -> assertThat(e.getNomDebouche()).as("check nomDebouche").isEqualTo(actual.getNomDebouche()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormationInitialeUpdatableRelationshipsEquals(FormationInitiale expected, FormationInitiale actual) {
        assertThat(expected)
            .as("Verify FormationInitiale relationships")
            .satisfies(e -> assertThat(e.getFormation()).as("check formation").isEqualTo(actual.getFormation()));
    }
}
