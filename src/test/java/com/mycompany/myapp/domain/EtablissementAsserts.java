package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EtablissementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementAllPropertiesEquals(Etablissement expected, Etablissement actual) {
        assertEtablissementAutoGeneratedPropertiesEquals(expected, actual);
        assertEtablissementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementAllUpdatablePropertiesEquals(Etablissement expected, Etablissement actual) {
        assertEtablissementUpdatableFieldsEquals(expected, actual);
        assertEtablissementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementAutoGeneratedPropertiesEquals(Etablissement expected, Etablissement actual) {
        assertThat(expected)
            .as("Verify Etablissement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementUpdatableFieldsEquals(Etablissement expected, Etablissement actual) {
        assertThat(expected)
            .as("Verify Etablissement relevant properties")
            .satisfies(e -> assertThat(e.getNomEtablissement()).as("check nomEtablissement").isEqualTo(actual.getNomEtablissement()))
            .satisfies(e -> assertThat(e.getPhoto()).as("check photo").isEqualTo(actual.getPhoto()))
            .satisfies(e -> assertThat(e.getPhotoContentType()).as("check photo contenty type").isEqualTo(actual.getPhotoContentType()))
            .satisfies(e -> assertThat(e.getRegion()).as("check region").isEqualTo(actual.getRegion()))
            .satisfies(e -> assertThat(e.getDepartement()).as("check departement").isEqualTo(actual.getDepartement()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getTelephone()).as("check telephone").isEqualTo(actual.getTelephone()))
            .satisfies(e -> assertThat(e.getTypeEtablissement()).as("check typeEtablissement").isEqualTo(actual.getTypeEtablissement()))
            .satisfies(e -> assertThat(e.getStatut()).as("check statut").isEqualTo(actual.getStatut()))
            .satisfies(e -> assertThat(e.getAutreRegion()).as("check autreRegion").isEqualTo(actual.getAutreRegion()))
            .satisfies(e -> assertThat(e.getAutreDepartement()).as("check autreDepartement").isEqualTo(actual.getAutreDepartement()))
            .satisfies(e -> assertThat(e.getCfp()).as("check cfp").isEqualTo(actual.getCfp()))
            .satisfies(e -> assertThat(e.getLycee()).as("check lycee").isEqualTo(actual.getLycee()))
            .satisfies(e -> assertThat(e.getFiliere()).as("check filiere").isEqualTo(actual.getFiliere()))
            .satisfies(e -> assertThat(e.getSerie()).as("check serie").isEqualTo(actual.getSerie()))
            .satisfies(e -> assertThat(e.getAutreFiliere()).as("check autreFiliere").isEqualTo(actual.getAutreFiliere()))
            .satisfies(e -> assertThat(e.getAutreSerie()).as("check autreSerie").isEqualTo(actual.getAutreSerie()))
            .satisfies(
                e -> assertThat(e.getAutreNomEtablissement()).as("check autreNomEtablissement").isEqualTo(actual.getAutreNomEtablissement())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementUpdatableRelationshipsEquals(Etablissement expected, Etablissement actual) {
        assertThat(expected)
            .as("Verify Etablissement relationships")
            .satisfies(e -> assertThat(e.getFormations()).as("check formations").isEqualTo(actual.getFormations()));
    }
}
